# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Deploy Service

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
        
    - name: Install Depency
      run: go mod tidy
      
    - name: Build
      run:  go build -o myapp .

    - name: Deploy to server via SSH
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          # Перемещение в рабочую директорию
          cd /home/${{ secrets.SERVER_USER }}/app

          # Остановка старого процесса (если он есть)
          sudo systemctl stop myapp || true

          # Обновление бинарника
          rm -f myapp
          mv ~/myapp myapp
          chmod +x myapp

          # Обновление переменных окружения
          echo "TELEGRAM_API_TOKEN=${{ secrets.TELEGRAM_API_TOKEN }}" | sudo tee /etc/environment
          echo "SERVER_CONNECTION_TOKEN=${{ secrets.SERVER_CONNECTION_TOKEN }}" | sudo tee -a /etc/environment

          # Перезапуск сервиса
          sudo systemctl daemon-reload
          sudo systemctl start myapp
          sudo systemctl enable myapp

    

